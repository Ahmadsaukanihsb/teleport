local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")

-- ======= CONFIGURATION =======
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066  -- Ganti dengan ID game kamu
local CHECK_INTERVAL = 15         -- Detik antar pengecekan
local INSTANCE_TIMEOUT = 120      -- Timeout instance (dalam detik)
local CHAT_MESSAGE = "dsadadsadas"  -- Pesan chat saat di instance benar
-- =============================

-- Fungsi HTTP request
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = syn and syn.request or http_request or request
    if not requestFunc then return nil end

    local url = REDIS_API_URL .. endpoint
    local requestData = {
        Url = url,
        Method = method,
        Headers = {
            ["Content-Type"] = "application/json"
        }
    }

    if body then
        requestData.Body = HttpService:JSONEncode(body)
    end

    local success, response = pcall(requestFunc, requestData)
    return success and response or nil
end

-- Mendapatkan instance aktif saat ini dari API
local function getCurrentInstance()
    local response = makeHttpRequest("GET", "/getInstanceId")
    if response and response.StatusCode == 200 then
        local data = HttpService:JSONDecode(response.Body)
        return data.instanceId
    end
    return nil
end

-- Kirim pesan ke chat
local function sendChatMessage(message)
    -- TextChatService (baru)
    if TextChatService and TextChatService.TextChannels then
        local channel = TextChatService.TextChannels.RBXGeneral
        if channel then
            pcall(function() channel:SendAsync(message) end)
            return
        end
    end

    -- Fallback ke sistem chat lama
    local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
    if chatEvents then
        local sayMessage = chatEvents:FindFirstChild("SayMessageRequest")
        if sayMessage then
            pcall(function() sayMessage:FireServer(message, "All") end)
        end
    end
end

-- Fungsi untuk menekan tombol "Accept" secara otomatis
local function autoClickAcceptButton()
    local tryLimit = 10
    local delayBetweenTries = 1

    for i = 1, tryLimit do
        local gui = Players.LocalPlayer:FindFirstChild("PlayerGui")
        if gui then
            for _, descendant in ipairs(gui:GetDescendants()) do
                if descendant:IsA("TextButton") and descendant.Text:lower():find("accept") then
                    print("Menemukan tombol Accept, menekannya...")
                    task.spawn(function()
                        descendant:Activate()
                    end)
                    return true
                end
            end
        end
        task.wait(delayBetweenTries)
    end

    warn("Tombol Accept tidak ditemukan setelah beberapa percobaan.")
    return false
end

-- Logika untuk menangani instance
local function handleInstance(newInstanceId)
    local currentInstanceId = game.JobId

    if newInstanceId == currentInstanceId then
        -- Sudah berada di instance yang benar
        sendChatMessage(CHAT_MESSAGE)
        print("Sudah di instance yang sesuai, menunggu instance baru...")

        -- Tekan tombol Accept secara otomatis
        autoClickAcceptButton()

        return false
    else
        -- Instance berbeda, coba teleport
        print("Instance baru ditemukan, mencoba teleport...")
        local success = pcall(function()
            TeleportService:TeleportToPlaceInstance(PLACE_ID, newInstanceId, Players.LocalPlayer)
        end)

        if success then
            -- Verifikasi berhasil teleport
            local startTime = os.time()
            while os.time() - startTime < 30 do
                if game.JobId == newInstanceId then
                    sendChatMessage(CHAT_MESSAGE)
                    return true
                end
                task.wait(1)
            end
            warn("Timeout: Gagal memverifikasi teleport.")
        else
            warn("Teleport gagal.")
        end
        return false
    end
end

-- Loop utama pengecekan instance
local function mainLoop()
    local lastCleanupTime = os.time()

    while true do
        -- Cleanup instance lama
        if os.time() - lastCleanupTime > 60 then
            pcall(function()
                makeHttpRequest("POST", "/cleanupInstances", {timeout = INSTANCE_TIMEOUT})
            end)
            lastCleanupTime = os.time()
        end

        -- Cek instance dari API
        local newInstanceId = getCurrentInstance()

        if newInstanceId then
            handleInstance(newInstanceId)
        else
            print("Belum ada instance baru, menunggu...")
        end

        task.wait(CHECK_INTERVAL)
    end
end

-- Eksekusi utama dengan retry
local function startWithRetry()
    while true do
        local success, err = pcall(mainLoop)
        if not success then
            warn("Terjadi error pada loop utama:", err)
            print("Restart dalam 30 detik...")
            task.wait(30)
        end
    end
end

-- Jalankan script
startWithRetry()
