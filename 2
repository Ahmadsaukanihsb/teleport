local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- CONFIGURASI
local EXTERNAL_SCRIPT_URL = "https://pastebin.com/raw/pfpzbXiF"  -- URL script Anda
local BACKEND_URL = "https://backend-vercel-ashy.vercel.app/api/register.js"
local WEBHOOK_URL = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
local MAX_RETRIES = 3
local RETRY_DELAY = 2

local player = Players.LocalPlayer
local scriptCache = nil

-- ====================== [FUNGSI UTAMA] ======================

--- Ambil script dari Pastebin dengan caching
local function fetchScript()
    if scriptCache then return scriptCache end
    
    for attempt = 1, MAX_RETRIES do
        local success, content = pcall(function()
            local response = HttpService:GetAsync(EXTERNAL_SCRIPT_URL, true)
            assert(#response > 50, "Script terlalu pendek")
            return response
        end)
        
        if success then
            scriptCache = content
            print("[âœ“] Script berhasil diambil")
            return content
        else
            warn(string.format("[Ã—] Percobaan %d gagal: %s", attempt, content))
            if attempt < MAX_RETRIES then task.wait(RETRY_DELAY) end
        end
    end
    error("Gagal mengambil script setelah "..MAX_RETRIES.."x percobaan")
end

--- Jalankan script eksternal (full access)
local function execute()
    local fn, err = loadstring(fetchScript())
    if not fn then error("Load error: "..err) end
    return fn()  -- Eksekusi langsung
end

--- Kirim data ke backend
local function sendToBackend(data)
    pcall(function()
        HttpService:RequestAsync({
            Url = BACKEND_URL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json",
                ["X-Game-ID"] = tostring(game.GameId)
            },
            Body = HttpService:JSONEncode(data)
        })
    end)
end

--- Kirim notifikasi ke Discord
local function sendToWebhook(message)
    pcall(function()
        HttpService:RequestAsync({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode({content = message})
        })
    end)
end

-- ====================== [INISIALISASI] ======================

-- Main system
local function init()
    -- 1. Jalankan script eksternal
    local success, result = pcall(execute)
    
    -- 2. Laporkan hasil eksekusi
    if success then
        print("[âœ“] Script berhasil dijalankan!")
        sendToWebhook(string.format(
            "**%s** (ID: %d) menjalankan script di game **%s**",
            player.Name, player.UserId, game.PlaceId
        ))
        
        -- Kirim konfirmasi ke backend
        sendToBackend({
            status = "success",
            player = player.Name,
            userId = player.UserId,
            timestamp = os.time()
        })
    else
        warn("[Ã—] Error:", result)
        sendToWebhook(string.format(
            "**ERROR**\nPlayer: %s\n```lua\n%s```",
            player.Name, result
        ))
    end
    
    -- 3. Periodic background reporting
    while task.wait(300) do  -- Setiap 5 menit
        sendToBackend({
            player = player.Name,
            userId = player.UserId,
            placeId = game.PlaceId,
            timestamp = os.time()
        })
    end
end

-- Start dengan error handling
local ok, err = pcall(init)
if not ok then
    warn("[FATAL ERROR]", err)
    sendToWebhook("ðŸ”¥ **CRITICAL ERROR** ðŸ”¥\n```"..tostring(err).."```")
end
