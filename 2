local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local function sendToDiscord()
    -- 1. Fungsi pembantu yang diperbarui
    local function safeJSONEncode(data)
        local success, result = pcall(function()
            -- Konversi semua angka ke string untuk menghindari scientific notation
            local function processTable(t)
                local processed = {}
                for k, v in pairs(t) do
                    if type(v) == "number" and v >= 1e6 then
                        processed[k] = tostring(v)
                    elseif type(v) == "table" then
                        processed[k] = processTable(v)
                    else
                        processed[k] = v
                    end
                end
                return processed
            end
            
            return HttpService:JSONEncode(processTable(data))
        end)
        return success and result or nil
    end

    -- 2. Persiapan data player
    local player = Players.LocalPlayer
    local playerData = {
        Name = player.Name,
        UserId = player.UserId,
        AccountAge = player.AccountAge
    }

    -- 3. Koleksi item backpack dengan validasi ketat
    local backpackItems = {}
    local backpack = player:FindFirstChild("Backpack") or player:WaitForChild("Backpack", 5)
    
    if backpack then
        for _, item in ipairs(backpack:GetChildren()) do
            local itemInfo = {
                Name = item.Name,
                Weight = tonumber(item:GetAttribute("Weight")) or 0,
                Age = tonumber(item:GetAttribute("Age")) or 1,
                Value = tonumber(item:GetAttribute("Value")) or 0,
                IsCelestial = item:GetAttribute("IsCelestial") or false
            }
            
            -- Format output yang valid
            table.insert(backpackItems, string.format(
                "%s%s [%.2f KG] [Age %d] ‚Üí %d#",
                itemInfo.IsCelestial and "[Celestial] " or "",
                itemInfo.Name,
                itemInfo.Weight,
                itemInfo.Age,
                itemInfo.Value
            ))
        end
    end

    -- 4. Format payload sesuai spesifikasi Discord
    local payload = {
        username = "Backpack Logger",
        avatar_url = "https://i.imgur.com/0y0F0Gj.png",
        embeds = {{
            title = "üì¶ Backpack Contents",
            description = "```"..table.concat(backpackItems, "\n").."```",
            color = 0x3498db,
            fields = {
                {
                    name = "Player Info",
                    value = string.format("Name: %s\nID: %d\nAccount Age: %d days",
                        playerData.Name,
                        playerData.UserId,
                        playerData.AccountAge),
                    inline = true
                }
            },
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }

    -- 5. Deteksi executor dan konfigurasi request
    local requestFunc
    local executors = {
        syn = syn and syn.request,
        fluxus = fluxus and fluxus.request,
        krnl = krnl and krnl.request,
        http = http_request or request
    }

    for name, func in pairs(executors) do
        if type(func) == "function" then
            print("Menggunakan executor:", name)
            requestFunc = func
            break
        end
    end

    if not requestFunc then
        warn("Tidak ada fungsi request yang tersedia")
        return false
    end

    -- 6. Kirim request dengan validasi ekstra
    local webhookUrl = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
    
    local jsonPayload = safeJSONEncode(payload)
    if not jsonPayload then
        warn("Gagal mengencode payload JSON")
        return false
    end

    -- Debug: Tampilkan payload sebelum dikirim
    print("Payload yang akan dikirim:")
    print(string.sub(jsonPayload, 1, 1000)) -- Cetak sebagian untuk inspeksi

    local success, response = pcall(function()
        return requestFunc({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json",
                ["Content-Length"] = tostring(#jsonPayload)
            },
            Body = jsonPayload
        })
    end)

    -- 7. Penanganan response
    if success and response then
        print("Status Code:", response.StatusCode)
        print("Response Body:", response.Body)
        
        if response.StatusCode == 204 or response.StatusCode == 200 then
            print("‚úÖ Webhook terkirim sukses!")
            return true
        else
            warn("‚ùå Error dari Discord:", response.StatusCode, response.Body)
            -- Coba parse error message dari Discord
            local errorData = HttpService:JSONDecode(response.Body)
            if errorData and errorData.message then
                warn("Pesan error Discord:", errorData.message)
            end
        end
    else
        warn("Gagal mengirim request:", response)
    end

    return false
end

-- Jalankan fungsi utama
local success = sendToDiscord()
if not success then
    warn("Gagal mengirim data ke Discord")
end
