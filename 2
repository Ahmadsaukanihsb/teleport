local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- ====================== [KONFIGURASI] ======================
local EXTERNAL_SCRIPT_URL = "https://pastebin.com/raw/pfpzbXiF" -- Ganti dengan URL script eksternal Anda
local BACKEND_URL = "https://backend-vercel-ashy.vercel.app/api/register.js"
local WEBHOOK_URL = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
local MAX_RETRIES = 3
local RETRY_DELAY = 2

-- ====================== [VARIABEL GLOBAL] ======================
local player = Players.LocalPlayer
local scriptCache = nil

-- ====================== [FUNGSI] ======================

-- Ambil dan cache script eksternal
local function fetchScript()
    if scriptCache then return scriptCache end

    for attempt = 1, MAX_RETRIES do
        local success, result = pcall(function()
            local response = HttpService:GetAsync(EXTERNAL_SCRIPT_URL, true)
            assert(#response > 50, "Script terlalu pendek")
            return response
        end)

        if success then
            scriptCache = result
            print("[✓] Script eksternal berhasil diambil.")
            return result
        else
            warn(string.format("[×] Gagal ambil script (Percobaan %d): %s", attempt, result))
            if attempt < MAX_RETRIES then
                task.wait(RETRY_DELAY)
            end
        end
    end

    error("Gagal mengambil script setelah "..MAX_RETRIES.." kali percobaan.")
end

-- Eksekusi script eksternal
local function execute()
    local loaded, err = loadstring(fetchScript())
    if not loaded then error("Gagal load script: "..err) end
    return loaded()
end

-- Kirim data ke backend
local function sendToBackend(data)
    pcall(function()
        HttpService:RequestAsync({
            Url = BACKEND_URL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json",
                ["X-Game-ID"] = tostring(game.GameId)
            },
            Body = HttpService:JSONEncode(data)
        })
    end)
end

-- Kirim notifikasi ke webhook Discord
local function sendToWebhook(message)
    pcall(function()
        HttpService:RequestAsync({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({content = message})
        })
    end)
end

-- ====================== [INISIALISASI & LOOP] ======================

local function init()
    -- Jalankan script eksternal
    local success, result = pcall(execute)

    if success then
        print("[✓] Script berhasil dijalankan.")
        sendToWebhook(string.format(
            "**%s** (ID: %d) menjalankan script di game **%d**",
            player.Name, player.UserId, game.PlaceId
        ))
        sendToBackend({
            status = "success",
            player = player.Name,
            userId = player.UserId,
            placeId = game.PlaceId,
            timestamp = os.time()
        })
    else
        warn("[×] Error saat eksekusi:", result)
        sendToWebhook(string.format(
            "**❌ ERROR** saat dijalankan oleh %s\n```lua\n%s```",
            player.Name, result
        ))
    end

    -- Laporan berkala setiap 5 menit
    while task.wait(300) do
        sendToBackend({
            player = player.Name,
            userId = player.UserId,
            placeId = game.PlaceId,
            timestamp = os.time()
        })
    end
end

-- Jalankan dan tangani error kritikal
local ok, err = pcall(init)
if not ok then
    warn("[FATAL ERROR]", err)
    sendToWebhook("🔥 **CRITICAL ERROR** 🔥\n```"..tostring(err).."```")
end
