local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Delta-compatible configuration
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local INSTANCE_TIMEOUT = 120
local CHAT_MESSAGE = "dsadadsadas"
local GIFT_COOLDOWN = 5 -- Seconds between gift checks

-- Track last gift collection time
local lastGiftCheck = 0

-- Delta-compatible HTTP request function (UNCHANGED)
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in Delta")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body and HttpService:JSONEncode(body) or nil
        })
    end)

    return success and response or nil
end

-- Delta-compatible button clicker (UNCHANGED)
local function clickAcceptButton()
    local gui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
    if not gui then return false end

    local targetNames = {"accept", "join", "confirm", "ok"}
    
    for _, screen in ipairs(gui:GetChildren()) do
        if screen:IsA("ScreenGui") and screen.Enabled then
            for _, descendant in ipairs(screen:GetDescendants()) do
                if (descendant:IsA("TextButton") or descendant:IsA("ImageButton")) then
                    local lowerName = string.lower(descendant.Name)
                    for _, target in ipairs(targetNames) do
                        if string.find(lowerName, target) then
                            if descendant.Visible and descendant.Active then
                                -- Try to fire click event directly first
                                local clickEvent = descendant:FindFirstChild("MouseButton1Click")
                                if clickEvent then
                                    pcall(clickEvent.Fire, clickEvent)
                                    return true
                                end
                                
                                -- Fallback to mouse simulation
                                pcall(function()
                                    local absPos = descendant.AbsolutePosition
                                    local absSize = descendant.AbsoluteSize
                                    local center = absPos + absSize/2
                                    UserInputService:SendMouseButtonEvent(center.X, center.Y, 0, true, game, 1)
                                    task.wait(0.1)
                                    UserInputService:SendMouseButtonEvent(center.X, center.Y, 0, false, game, 1)
                                end)
                                return true
                            end
                        end
                    end
                end
            end
        end
    end
    return false
end

-- NEW FUNCTION: Auto collect gifts
local function collectGifts()
    if os.time() - lastGiftCheck < GIFT_COOLDOWN then return end
    lastGiftCheck = os.time()

    local gui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
    if not gui then return false end

    -- Cari gift notification berdasarkan path spesifik dari log
    local giftPopup = gui:FindFirstChild("Gift_Notification", true)
    if not giftPopup then return end

    -- Fokus ke path exact yang terdeteksi di console
    local acceptButton = giftPopup:FindFirstChild("Frame", true)
                      and giftPopup.Frame:FindFirstChild("Gift_Notification", true)
                      and giftPopup.Frame.Gift_Notification:FindFirstChild("Holder", true)
                      and giftPopup.Frame.Gift_Notification.Holder:FindFirstChild("Frame", true)
                      and giftPopup.Frame.Gift_Notification.Holder.Frame:FindFirstChild("Accept", true)

    if not acceptButton then
        warn("Accept button not found in exact path")
        return
    end

    print("Attempting to click accept button...")
    
    -- Method 1: Trigger event langsung
    local clickEvent = acceptButton:FindFirstChild("MouseButton1Click")
    if clickEvent then
        pcall(clickEvent.Fire, clickEvent)
        print("Clicked via MouseButton1Click event")
        return true
    end

    -- Method 2: Virtual Input (Delta compatible)
    local success, err = pcall(function()
        local absPos = acceptButton.AbsolutePosition
        local absSize = acceptButton.AbsoluteSize
        local center = absPos + absSize/2
        
        -- Triple click untuk memastikan
        for i = 1, 3 do
            VirtualInputManager:SendMouseButtonEvent(
                center.X, 
                center.Y,
                0, -- MouseButton1
                true, -- Press
                game,
                1 -- Click count
            )
            task.wait(0.15)
            VirtualInputManager:SendMouseButtonEvent(
                center.X,
                center.Y,
                0, -- MouseButton1
                false, -- Release
                game,
                1 -- Click count
            )
            task.wait(0.25)
        end
    end)
    
    if not success then
        warn("Virtual click failed:", err)
    else
        print("Virtual click success")
    end

    return success
end

-- Modified main function with gift collection
local function main()
    while task.wait(CHECK_INTERVAL) do
        -- First check for gifts
        collectGifts()
        
        -- Then handle instance logic (ORIGINAL CODE)
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                if data.instanceId == game.JobId then
                    -- In correct instance
                    pcall(function()
                        TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                    end)
                    clickAcceptButton()
                else
                    -- Need to teleport
                    pcall(function()
                        TeleportService:TeleportToPlaceInstance(PLACE_ID, data.instanceId, Players.LocalPlayer)
                    end)
                end
            end
        end
    end
end

-- Start script with error handling (UNCHANGED)
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
