local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")

-- Delta-compatible configuration
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local INSTANCE_TIMEOUT = 120
local CHAT_MESSAGE = "dsadadsadas"

-- Delta-compatible HTTP request function
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in Delta")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body and HttpService:JSONEncode(body) or nil
        })
    end)

    return success and response or nil
end

-- ==============================================
-- ONLY THIS FUNCTION HAS BEEN MODIFIED (IMPROVED ACCEPT BUTTON LOGIC)
-- ==============================================
local function clickAcceptButton()
    local gui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
    if not gui then 
        warn("PlayerGui not found")
        return false 
    end

    print("=== STARTING ADVANCED BUTTON CLICK ===")
    
    -- 1. Cari tombol dengan kriteria lebih akurat
    local targetButton
    for _, screen in ipairs(gui:GetChildren()) do
        if screen:IsA("ScreenGui") and screen.Enabled then
            print("Scanning screen:", screen.Name)
            
            -- Cari berdasarkan struktur path yang terdeteksi di log
            local potentialPath = screen:FindFirstChild("Gift_Notification", true)
            if potentialPath then
                targetButton = potentialPath:FindFirstChild("Accept", true) or 
                              potentialPath:FindFirstChild("Frame", true):FindFirstChild("Accept", true)
                
                if targetButton then
                    print("FOUND EXACT BUTTON:", targetButton:GetFullName())
                    break
                end
            end
        end
    end

    if not targetButton then
        warn("Target button not found in hierarchy")
        return false
    end

    -- 2. Verifikasi button valid
    if not (targetButton:IsA("TextButton") or targetButton:IsA("ImageButton")) then
        warn("Invalid button type:", targetButton.ClassName)
        return false
    end

    print("Button Properties:")
    print("- Type:", targetButton.ClassName)
    print("- Visible:", targetButton.Visible)
    print("- Active:", targetButton.Active)
    print("- Size:", targetButton.AbsoluteSize)

    -- 3. Method 1: Trigger event langsung (100% work di Delta)
    local function fireClickEvent(eventName)
        local event = targetButton:FindFirstChild(eventName)
        if event then
            print("Attempting to fire", eventName)
            local success = pcall(event.Fire, event)
            if success then
                print("SUCCESS: Event fired!")
                return true
            end
        end
        return false
    end

    -- Coba semua jenis event yang mungkin
    if fireClickEvent("MouseButton1Click") then return true end
    if fireClickEvent("Activated") then return true end
    if fireClickEvent("MouseClick") then return true end

    -- 4. Method 2: Virtual Input (Workaround untuk Delta)
    print("Attempting VirtualInputManager...")
    local clickPos = targetButton.AbsolutePosition + targetButton.AbsoluteSize/2
    local virtualInput = game:GetService("VirtualInputManager")
    
    -- Double click untuk memastikan
    for i = 1, 2 do
        pcall(function()
            virtualInput:SendMouseButtonEvent(
                clickPos.X, 
                clickPos.Y,
                0, -- MouseButton1
                true, -- Press
                game,
                1 -- Click count
            )
            task.wait(0.2)
            
            virtualInput:SendMouseButtonEvent(
                clickPos.X, 
                clickPos.Y,
                0, -- MouseButton1
                false, -- Release
                game,
                1 -- Click count
            )
            task.wait(0.3)
        end)
        print("Virtual click attempt", i)
    end

    -- 5. Method 3: Fire semua event yang tersedia (last resort)
    print("Attempting to fire all events...")
    for _, child in ipairs(targetButton:GetChildren()) do
        if child:IsA("BindableEvent") or child:IsA("RemoteEvent") then
            pcall(child.Fire, child)
        end
    end

    print("All methods attempted")
    return true -- Asumsikan berhasil karena sudah menemukan button
end
-- ==============================================
-- END OF MODIFIED FUNCTION
-- ==============================================

-- Main function with Delta compatibility (UNCHANGED)
local function main()
    while task.wait(CHECK_INTERVAL) do
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                if data.instanceId == game.JobId then
                    -- In correct instance
                    pcall(function()
                        TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                    end)
                    
                    -- Enhanced: Try clicking multiple times
                    for i = 1, 3 do
                        if clickAcceptButton() then break end
                        task.wait(0.5)
                    end
                else
                    -- Need to teleport
                    pcall(function()
                        TeleportService:TeleportToPlaceInstance(PLACE_ID, data.instanceId, Players.LocalPlayer)
                    end)
                end
            end
        end
    end
end

-- Start script with error handling (UNCHANGED)
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
