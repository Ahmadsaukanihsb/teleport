local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Delta-compatible configuration
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local INSTANCE_TIMEOUT = 120
local CHAT_MESSAGE = "dsadadsadas"
local GIFT_COOLDOWN = 3 -- Seconds between gift checks
local PLAYER_DETECTION_RADIUS = 20 -- Distance to check for other players

-- Track last gift collection time
local lastGiftCheck = 0

-- Function to check if other players are nearby
local function isPlayerNearby()
    local localPlayer = Players.LocalPlayer
    if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local localPosition = localPlayer.Character.HumanoidRootPart.Position
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
            if distance <= PLAYER_DETECTION_RADIUS then
                return true
            end
        end
    end
    
    return false
end

-- Delta-compatible HTTP request function (UNCHANGED)
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in Delta")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body and HttpService:JSONEncode(body) or nil
        })
    end)

    return success and response or nil
end

-- Delta-compatible button clicker (UNCHANGED)
local function clickAcceptButton()
    local gui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
    if not gui then return false end

    local targetNames = {"accept", "join", "confirm", "ok"}
    
    for _, screen in ipairs(gui:GetChildren()) do
        if screen:IsA("ScreenGui") and screen.Enabled then
            for _, descendant in ipairs(screen:GetDescendants()) do
                if (descendant:IsA("TextButton") or descendant:IsA("ImageButton")) then
                    local lowerName = string.lower(descendant.Name)
                    for _, target in ipairs(targetNames) do
                        if string.find(lowerName, target) then
                            if descendant.Visible and descendant.Active then
                                -- Try to fire click event directly first
                                local clickEvent = descendant:FindFirstChild("MouseButton1Click")
                                if clickEvent then
                                    pcall(clickEvent.Fire, clickEvent)
                                    return true
                                end
                                
                                -- Fallback to mouse simulation
                                pcall(function()
                                    local absPos = descendant.AbsolutePosition
                                    local absSize = descendant.AbsoluteSize
                                    local center = absPos + absSize/2
                                    UserInputService:SendMouseButtonEvent(center.X, center.Y, 0, true, game, 1)
                                    task.wait(0.1)
                                    UserInputService:SendMouseButtonEvent(center.X, center.Y, 0, false, game, 1)
                                end)
                                return true
                            end
                        end
                    end
                end
            end
        end
    end
    return false
end

-- NEW FUNCTION: Auto collect gifts
local function collectGifts()
    if os.time() - lastGiftCheck < GIFT_COOLDOWN then return end
    lastGiftCheck = os.time()

    local gui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
    if not gui then return false end

    -- Cari semua frame gift dengan pola teks "Gift from @"
    for _, screen in ipairs(gui:GetChildren()) do
        if screen:IsA("ScreenGui") and screen.Enabled then
            for _, frame in ipairs(screen:GetDescendants()) do
                if frame:IsA("TextLabel") and string.find(frame.Text, "Gift from @") then
                    -- Cari parent frame yang mengandung tombol Accept
                    local giftFrame = frame:FindFirstAncestorOfClass("Frame")
                    if giftFrame then
                        -- Cari tombol Accept secara spesifik
                        for _, button in ipairs(giftFrame:GetDescendants()) do
                            if button:IsA("TextButton") and string.match(string.lower(button.Text), "accept") then
                                print("Found gift accept button:", button:GetFullName())
                                
                                -- Method 1: Click event langsung
                                local clickEvent = button:FindFirstChild("MouseButton1Click")
                                if clickEvent then
                                    pcall(clickEvent.Fire, clickEvent)
                                    print("Clicked via event")
                                    return true
                                end
                                
                                -- Method 2: Virtual click (Delta compatible)
                                local absPos = button.AbsolutePosition
                                local absSize = button.AbsoluteSize
                                if absSize.X > 0 and absSize.Y > 0 then
                                    local center = absPos + absSize/2
                                    pcall(function()
                                        VirtualInputManager:SendMouseButtonEvent(
                                            center.X, center.Y, 0, true, game, 1)
                                        task.wait(0.1)
                                        VirtualInputManager:SendMouseButtonEvent(
                                            center.X, center.Y, 0, false, game, 1)
                                    end)
                                    print("Clicked via virtual input")
                                    return true
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return false
end

-- Modified main function with gift collection and player detection
local function main()
    while task.wait(CHECK_INTERVAL) do
        -- First check for gifts
        collectGifts()
        
        -- Check if any players are nearby
        if isPlayerNearby() then
            print("Player detected nearby - skipping chat")
            continue
        end
        
        -- Then handle instance logic (ORIGINAL CODE)
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                if data.instanceId == game.JobId then
                    -- In correct instance
                    pcall(function()
                        TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                    end)
                    clickAcceptButton()
                else
                    -- Need to teleport
                    pcall(function()
                        TeleportService:TeleportToPlaceInstance(PLACE_ID, data.instanceId, Players.LocalPlayer)
                    end)
                end
            end
        end
    end
end

-- Start script with error handling (UNCHANGED)
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
