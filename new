local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local function validateEmbed(embed)
    -- Pastikan semua field embed valid
    if not embed.title then embed.title = "No Title" end
    if not embed.description then embed.description = "No Description" end
    embed.color = embed.color or 0x3498db
    
    -- Validasi fields
    if embed.fields then
        for i, field in ipairs(embed.fields) do
            if not field.name then field.name = "Field "..i end
            if not field.value then field.value = "Empty" end
            field.inline = field.inline or false
        end
    end
    
    return embed
end

local function sendBackpackData()
    -- 1. Persiapan data dasar
    local player = Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")
    local items = {}
    
    -- 2. Kumpulkan item dengan format yang konsisten
    for _, item in ipairs(backpack:GetChildren()) do
        table.insert(items, string.format(
            "%s [%.2f KG] [Age %d] ‚Üí %d#",
            item.Name,
            tonumber(item:GetAttribute("Weight")) or 0,
            tonumber(item:GetAttribute("Age")) or 1,
            tonumber(item:GetAttribute("Value")) or 0
        ))
    end

    -- 3. Buat payload yang sesuai dengan spesifikasi Discord
    local payload = {
        username = "Backpack Logger",
        avatar_url = "https://i.imgur.com/0y0F0Gj.png",
        embeds = {
            validateEmbed({
                title = "üì¶ Backpack Contents",
                description = "```\n"..table.concat(items, "\n").."\n```",
                color = 0x3498db,
                fields = {
                    {
                        name = "Player Info",
                        value = string.format("Name: %s\nID: %d", player.Name, player.UserId),
                        inline = true
                    },
                    {
                        name = "Account Age",
                        value = player.AccountAge.." days",
                        inline = true
                    }
                },
                timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
            })
        }
    }

    -- 4. Konversi ke JSON dengan error handling
    local jsonPayload
    local success, err = pcall(function()
        jsonPayload = HttpService:JSONEncode(payload)
    end)
    
    if not success then
        warn("Gagal encode JSON:", err)
        return false
    end

    -- 5. Kirim ke webhook
    local webhookUrl = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
    
    local response
    if syn and syn.request then
        response = syn.request({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonPayload
        })
    elseif request then
        response = request({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonPayload
        })
    else
        warn("Tidak ada fungsi request yang tersedia")
        return false
    end

    -- 6. Handle response
    if response.StatusCode == 204 or response.StatusCode == 200 then
        print("‚úÖ Webhook terkirim sukses!")
        return true
    else
        warn("‚ùå Error dari Discord:", response.StatusCode)
        print("Response Body:", response.Body)
        return false
    end
end

-- Jalankan fungsi
local success = sendBackpackData()
if not success then
    warn("Gagal mengirim data ke Discord")
end
