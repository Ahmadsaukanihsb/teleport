local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")

-- Delta-compatible configuration
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local INSTANCE_TIMEOUT = 120
local CHAT_MESSAGE = "dsadadsadas"

-- Delta-compatible HTTP request function
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in Delta")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body and HttpService:JSONEncode(body) or nil
        })
    end)

    return success and response or nil
end

-- ==============================================
-- ONLY THIS FUNCTION HAS BEEN MODIFIED (IMPROVED ACCEPT BUTTON LOGIC)
-- ==============================================
local function clickAcceptButton()
    local gui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
    if not gui then 
        warn("PlayerGui not found")
        return false 
    end

    print("=== STARTING AUTO ACCEPT BUTTON CLICK ===")

    -- Langsung cari path yang sesuai
    local screenGui = gui:FindFirstChild("Gift_Notification")
    if not screenGui or not screenGui:FindFirstChild("Frame") then
        warn("Gift_Notification GUI structure not found")
        return false
    end

    local giftFrame = screenGui.Frame:FindFirstChild("Gift_Notification")
    if not giftFrame or not giftFrame:FindFirstChild("Holder") then
        warn("Gift_Notification.Holder not found")
        return false
    end

    local acceptButton = giftFrame.Holder:FindFirstChild("Frame") and giftFrame.Holder.Frame:FindFirstChild("Accept")
    if not acceptButton then
        warn("Accept button not found")
        return false
    end

    -- Validasi tombol
    if not (acceptButton:IsA("ImageButton") or acceptButton:IsA("TextButton")) or not acceptButton.Visible then
        warn("Accept button invalid or not visible")
        return false
    end

    print("Clicking Accept button at path:", acceptButton:GetFullName())

    -- Fire event langsung (lebih stabil di Delta)
    local function fireClick(eventName)
        local ev = acceptButton:FindFirstChild(eventName)
        if ev then
            local ok = pcall(ev.Fire, ev)
            if ok then
                print("Fired", eventName)
                return true
            end
        end
        return false
    end

    if fireClick("MouseButton1Click") or fireClick("Activated") then
        return true
    end

    -- Virtual click fallback
    local VirtualInputManager = game:GetService("VirtualInputManager")
    local pos = acceptButton.AbsolutePosition + acceptButton.AbsoluteSize / 2

    for i = 1, 2 do
        pcall(function()
            VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, true, game, 1)
            task.wait(0.1)
            VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, false, game, 1)
        end)
        task.wait(0.2)
    end

    return true
end

-- ==============================================
-- END OF MODIFIED FUNCTION
-- ==============================================

-- Main function with Delta compatibility (UNCHANGED)
local function main()
    while task.wait(CHECK_INTERVAL) do
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                if data.instanceId == game.JobId then
                    -- In correct instance
                    pcall(function()
                        TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                    end)
                    
                    -- Enhanced: Try clicking multiple times
                    for i = 1, 3 do
                        if clickAcceptButton() then break end
                        task.wait(0.5)
                    end
                else
                    -- Need to teleport
                    pcall(function()
                        TeleportService:TeleportToPlaceInstance(PLACE_ID, data.instanceId, Players.LocalPlayer)
                    end)
                end
            end
        end
    end
end

-- Start script with error handling (UNCHANGED)
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
