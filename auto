local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")

-- Konfigurasi
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local PLAYER_DETECTION_RADIUS = 20
local CHAT_MESSAGE = "dsadadsadas"
local MAX_CHAT_PER_INSTANCE = 3
local TELEPORT_COOLDOWN = 30 -- Cooldown untuk menghindari teleport spam

-- Penyimpanan lokal untuk melacak instance
local instanceChatCounts = {}
local lastTeleportAttempt = 0

-- Fungsi cek player lain
local function isPlayerNearby()
    local localPlayer = Players.LocalPlayer
    if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end

    local localPosition = localPlayer.Character.HumanoidRootPart.Position

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
            if distance <= PLAYER_DETECTION_RADIUS then
                return true
            end
        end
    end

    return false
end

-- HTTP request
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in Delta")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body and HttpService:JSONEncode(body) or nil
        })
    end)

    return success and response or nil
end

-- Fungsi untuk teleport dengan cooldown
local function safeTeleport(instanceId)
    if os.time() - lastTeleportAttempt < TELEPORT_COOLDOWN then
        print("⏳ Cooldown teleport, tunggu", TELEPORT_COOLDOWN - (os.time() - lastTeleportAttempt), "detik")
        return false
    end
    
    lastTeleportAttempt = os.time()
    pcall(function()
        TeleportService:TeleportToPlaceInstance(PLACE_ID, instanceId, Players.LocalPlayer)
    end)
    return true
end

-- Fungsi utama
local function main()
    while task.wait(CHECK_INTERVAL) do
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                -- Inisialisasi counter untuk instance baru
                if not instanceChatCounts[data.instanceId] then
                    instanceChatCounts[data.instanceId] = 0
                    print("🆕 Instance baru terdeteksi:", data.instanceId)
                end

                if data.instanceId == game.JobId then
                    print("✅ Berada di instance", game.JobId, "| Chat terkirim:", instanceChatCounts[game.JobId], "/", MAX_CHAT_PER_INSTANCE)

                    if instanceChatCounts[game.JobId] >= MAX_CHAT_PER_INSTANCE then
                        print("🚫 Batas chat tercapai untuk instance ini")
                        -- Cari instance baru
                        continue
                    elseif isPlayerNearby() then
                        print("👥 Player lain terdeteksi - skip chat")
                    else
                        pcall(function()
                            TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                            instanceChatCounts[game.JobId] += 1
                            print("💬 Mengirim chat (", instanceChatCounts[game.JobId], "/", MAX_CHAT_PER_INSTANCE, ")")
                        end)
                    end
                else
                    print("🔄 Instance lebih baru tersedia, teleporting...")
                    -- Reset counter untuk instance sebelumnya
                    if instanceChatCounts[game.JobId] then
                        instanceChatCounts[game.JobId] = nil
                    end
                    
                    if safeTeleport(data.instanceId) then
                        task.wait(5) -- Beri waktu untuk teleport
                    end
                end
            else
                warn("Gagal parsing data instanceId:", response.Body)
            end
        else
            warn("Gagal mendapatkan instanceId dari server")
        end
    end
end

-- Jalankan script
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
