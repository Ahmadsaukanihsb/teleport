repeat task.wait() until game:IsLoaded()

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")

local player = Players.LocalPlayer
local BACKEND_BASE_URL = "https://backend-vercel-ashy.vercel.app/api"
local INSTANCE_URL = BACKEND_BASE_URL .. "/latest-instance.js"

local CHECK_INTERVAL = 10 -- cek tiap 10 detik

local currentInstanceId = game.JobId

local function getActiveInstances()
    local success, response = pcall(function()
        return HttpService:GetAsync(INSTANCE_URL .. "?username=" .. player.Name)
    end)

    if success then
        local data = HttpService:JSONDecode(response)
        return data -- diasumsikan data berupa table dengan instanceId
    else
        warn("Gagal ambil data instance dari backend")
        return nil
    end
end

local function autoJoinNewInstance()
    while true do
        local data = getActiveInstances()
        if data and data.instanceId and data.instanceId ~= currentInstanceId then
            print("[AutoJoiner] Instance baru ditemukan: " .. data.instanceId .. ", teleporting...")
            TeleportService:TeleportToPlaceInstance(game.PlaceId, data.instanceId, player)
            return -- teleport akan memindahkan player, stop loop di sini
        else
            print("[AutoJoiner] Tidak ada instance baru, tetap di " .. currentInstanceId)
        end
        task.wait(CHECK_INTERVAL)
    end
end

-- Jalankan auto joiner
autoJoinNewInstance()
