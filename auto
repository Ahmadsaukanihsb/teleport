local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")

-- Konfigurasi
local REDIS_API_URL = "https://api-beta-mocha-45.vercel.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local PLAYER_DETECTION_RADIUS = 20
local CHAT_MESSAGE = "dsadadsadas"
local MAX_CHAT_PER_INSTANCE = 3
local NEW_INSTANCE_CHECK_INTERVAL = 60 -- Interval untuk mengecek instance baru

local chatCount = 0
local lastInstanceCheck = 0
local currentBestInstance = nil

-- Fungsi cek player lain
local function isPlayerNearby()
    local localPlayer = Players.LocalPlayer
    if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end

    local localPosition = localPlayer.Character.HumanoidRootPart.Position

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
            if distance <= PLAYER_DETECTION_RADIUS then
                return true
            end
        end
    end

    return false
end

-- HTTP request
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in Delta")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body and HttpService:JSONEncode(body) or nil
        })
    end)

    return success and response or nil
end

-- Fungsi untuk mendapatkan instance terbaru
local function getNewestInstance()
    local response = makeHttpRequest("GET", "/getInstanceId") -- Anda mungkin perlu menyesuaikan endpoint ini
    if response and response.StatusCode == 200 then
        local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
        if success and data.instanceId then
            return data.instanceId
        end
    end
    return nil
end

-- Fungsi untuk teleport ke instance baru
local function teleportToNewInstance()
    local newestInstance = getNewestInstance()
    if newestInstance and newestInstance ~= game.JobId then
        print("🚀 Instance baru ditemukan, teleporting...")
        pcall(function()
            TeleportService:TeleportToPlaceInstance(PLACE_ID, newestInstance, Players.LocalPlayer)
        end)
        return true
    end
    return false
end

-- Fungsi utama
local function main()
    while task.wait(CHECK_INTERVAL) do
        -- Cek instance baru secara berkala
        if os.time() - lastInstanceCheck > NEW_INSTANCE_CHECK_INTERVAL then
            if teleportToNewInstance() then
                lastInstanceCheck = os.time()
                continue -- Jika teleport berhasil, skip bagian bawah
            end
            lastInstanceCheck = os.time()
        end

        -- Logika utama tetap sama
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                if data.instanceId == game.JobId then
                    print("✅ Instance cocok, menjalankan tugas...")

                    if isPlayerNearby() then
                        print("👥 Player lain terdeteksi - skip chat")
                    elseif chatCount < MAX_CHAT_PER_INSTANCE then
                        pcall(function()
                            TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                            chatCount += 1
                            print("💬 Chat ke-", chatCount)
                        end)
                    else
                        print("💬 Batas chat tercapai untuk instance ini")
                    -- Jika sudah mencapai batas chat, coba cari instance baru
                    teleportToNewInstance()
                    chatCount = 0 -- Reset chat count setelah teleport
                    task.wait(5) -- Beri waktu untuk teleport
                    continue
                    end
                else
                    print("❌ Berada di instance salah, teleporting...")
                    pcall(function()
                        TeleportService:TeleportToPlaceInstance(PLACE_ID, data.instanceId, Players.LocalPlayer)
                    end)
                end
            else
                warn("Gagal parsing data instanceId:", response.Body)
            end
        else
            warn("Gagal mendapatkan instanceId dari server")
        end
    end
end

-- Jalankan script
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
