local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")

-- Config
local REDIS_API_URL = "https://38fa-36-76-129-51.ngrok-free.app/api" -- Sudah pakai /api prefix
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local MAX_CHAT_PER_INSTANCE = 3
local TELEPORT_COOLDOWN = 30
local CHAT_MESSAGE = "dsadasdsa"
local MAX_DISTANCE = 20

-- Penyimpanan lokal
local instanceChatCounts = {}
local lastTeleportAttempt = 0

local function makeHttpRequest(method, endpoint, body)
    local url = REDIS_API_URL .. endpoint
    local headers = { ["Content-Type"] = "application/json" }
    local requestBody = body and HttpService:JSONEncode(body) or nil

    local success, response = pcall(function()
        return HttpService:RequestAsync({
            Url = url,
            Method = method,
            Headers = headers,
            Body = requestBody,
        })
    end)

    if success then
        return response
    else
        warn("HTTP request failed:", response)
        return nil
    end
end

-- Update user instance di backend
local function updateUserInstance()
    local userId = Players.LocalPlayer.UserId
    local instanceId = game.JobId
    local body = { instanceId = instanceId, userId = userId }
    local res = makeHttpRequest("POST", "/setInstanceUser", body)
    if res and res.StatusCode == 200 then
        -- sukses update
    else
        warn("Failed to update user instance")
    end
end

-- Update posisi user di backend
local function updateUserPosition()
    local userId = Players.LocalPlayer.UserId
    local instanceId = game.JobId
    local pos = getLocalPlayerPosition()
    if not pos then return end

    local body = { instanceId = instanceId, userId = userId, position = pos }
    local res = makeHttpRequest("POST", "/setUserPosition", body)
    if res and res.StatusCode == 200 then
        -- sukses update posisi
    else
        warn("Failed to update user position")
    end
end

-- Teleport dengan cooldown
local function safeTeleport(instanceId)
    if os.time() - lastTeleportAttempt < TELEPORT_COOLDOWN then
        print("‚è≥ Cooldown teleport, tunggu", TELEPORT_COOLDOWN - (os.time() - lastTeleportAttempt), "detik")
        return false
    end
    lastTeleportAttempt = os.time()
    pcall(function()
        TeleportService:TeleportToPlaceInstance(PLACE_ID, instanceId, Players.LocalPlayer)
    end)
    return true
end

-- Hitung jarak Euclidean 3D
local function getDistance(pos1, pos2)
    local dx = pos1.x - pos2.x
    local dy = pos1.y - pos2.y
    local dz = pos1.z - pos2.z
    return math.sqrt(dx*dx + dy*dy + dz*dz)
end

-- Dapatkan posisi player lokal
local function getLocalPlayerPosition()
    local character = Players.LocalPlayer.Character
    if not character then return nil end
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return nil end
    local pos = rootPart.Position
    return { x = pos.X, y = pos.Y, z = pos.Z }
end

-- Main loop utama
local function main()
    while task.wait(CHECK_INTERVAL) do
        updateUserInstance()
        updateUserPosition()

        local userId = Players.LocalPlayer.UserId
        -- Ambil instanceId target dari backend dengan userId sebagai query
        local res = makeHttpRequest("GET", "/getInstanceId?userId=" .. tostring(userId))
        if res and res.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, res.Body)
            if success and data.instanceId then
                local instanceId = data.instanceId

                if not instanceChatCounts[instanceId] then
                    instanceChatCounts[instanceId] = 0
                    print("üÜï Instance baru terdeteksi:", instanceId)
                end

                if instanceId == game.JobId then
                    print("‚úÖ Berada di instance", game.JobId, "| Chat terkirim:", instanceChatCounts[game.JobId] or 0, "/", MAX_CHAT_PER_INSTANCE)

                    if instanceChatCounts[game.JobId] >= MAX_CHAT_PER_INSTANCE then
                        print("üö´ Batas chat tercapai untuk instance ini")
                    else
                        local posResp = makeHttpRequest("GET", "/getUserPositions?instanceId=" .. instanceId)
                        if posResp and posResp.StatusCode == 200 then
                            local successPos, dataUsers = pcall(HttpService.JSONDecode, HttpService, posResp.Body)
                            if successPos and dataUsers.users then
                                local localPos = getLocalPlayerPosition()
                                if not localPos then
                                    warn("‚ö†Ô∏è Gagal mendapatkan posisi lokal player")
                                else
                                    local foundLocalUser = false
                                    for _, user in ipairs(dataUsers.users) do
                                        if user.userId == userId then
                                            foundLocalUser = true
                                            break
                                        end
                                    end

                                    if not foundLocalUser then
                                        print("‚ùå UserId lokal tidak ditemukan di server ini, skip chat")
                                    else
                                        local canChat = false
                                        for _, user in ipairs(dataUsers.users) do
                                            if user.userId ~= userId and user.position then
                                                local dist = getDistance(localPos, user.position)
                                                if dist <= MAX_DISTANCE then
                                                    canChat = true
                                                    break
                                                end
                                            end
                                        end

                                        if canChat then
                                            pcall(function()
                                                TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                                                instanceChatCounts[game.JobId] = (instanceChatCounts[game.JobId] or 0) + 1
                                                print("üí¨ Mengirim chat (", instanceChatCounts[game.JobId], "/", MAX_CHAT_PER_INSTANCE, ")")
                                            end)
                                        else
                                            print("üõë Tidak ada user lain dalam radius " .. MAX_DISTANCE .. ", hentikan chat")
                                        end
                                    end
                                end
                            else
                                warn("Gagal parsing data posisi user dari server")
                            end
                        else
                            warn("Gagal mendapatkan posisi user dari server")
                        end
                    end
                else
                    print("üîÑ Instance berbeda, teleporting ke", instanceId)
                    if instanceChatCounts[game.JobId] then
                        instanceChatCounts[game.JobId] = nil
                    end
                    if safeTeleport(instanceId) then
                        task.wait(5)
                    end
                end
            else
                warn("Gagal parsing data instanceId:", res.Body)
            end
        else
            warn("Gagal mendapatkan instanceId dari server")
        end
    end
end

task.spawn(main)
