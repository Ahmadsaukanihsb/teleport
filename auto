-- Roblox Auto Teleport Script with instance.js backend

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

-- CONFIGURATION
local API_URL = "https://backend-vercel-ashy.vercel.app/join.js" -- endpoint join.js
local CHECK_INTERVAL = 10
local CHAT_INTERVAL = 30
local PROXIMITY_RADIUS = 20
local DEBUG_MODE = true

local DATABASE_USERS = {
    "Player1", "Player2", "Player3"
}

local lastInstanceId = nil
local isChatting = false
local shouldStopChatting = false
local stopScript = false

local function log(message)
    if DEBUG_MODE then
        print("[AutoJoiner] " .. message)
    end
end

local function isInDatabase(username)
    for _, dbUser in ipairs(DATABASE_USERS) do
        if username:lower() == dbUser:lower() then
            return true
        end
    end
    return false
end

local function checkProximity()
    local localPlayer = Players.LocalPlayer
    local char = localPlayer.Character
    if not char then return false end

    local localRoot = char:FindFirstChild("HumanoidRootPart")
    if not localRoot then return false end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local root = player.Character:FindFirstChild("HumanoidRootPart")
            if root and (localRoot.Position - root.Position).Magnitude <= PROXIMITY_RADIUS then
                return true
            end
        end
    end
    return false
end

local function sendChatMessage(message)
    local chatEvents = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
    if chatEvents then
        local say = chatEvents:FindFirstChild("SayMessageRequest")
        if say then
            say:FireServer(message, "All")
        end
    end
end

local function startChatLoop()
    if isChatting then return end
    isChatting = true
    shouldStopChatting = false

    task.spawn(function()
        while isChatting and not shouldStopChatting do
            if checkProximity() then
                log("Nearby player detected. Stopping chat.")
                shouldStopChatting = true
                break
            end
            sendChatMessage("Hello from auto joiner!")
            task.wait(CHAT_INTERVAL)
        end
        isChatting = false
    end)
end

local function getLatestInstance()
    local success, response = pcall(function()
        return HttpService:RequestAsync({
            Url = API_URL,
            Method = "GET",
        })
    end)

    if success and response.StatusCode == 200 then
        local data = HttpService:JSONDecode(response.Body)
        if data and data.instanceId then
            return data.instanceId
        end
    else
        log("Failed to get latest instance: " .. (response and response.Body or "unknown error"))
    end
    return nil
end


local function teleportToInstance(instanceId)
    local localPlayer = Players.LocalPlayer
    if not localPlayer then return false end

    log("Teleporting to instance: " .. instanceId)
    local success, result = pcall(function()
        TeleportService:TeleportToPlaceInstance(
            game.PlaceId,
            instanceId,
            localPlayer
        )
    end)

    if not success then
        log("Teleport failed: " .. tostring(result))
    end
    return success
end

local function mainLoop()
    while not stopScript do
        for _, player in ipairs(Players:GetPlayers()) do
            if isInDatabase(player.Name) and not isChatting then
                log("Database player detected: " .. player.Name)
                startChatLoop()
                break
            end
        end

        local newInstance = getLatestInstance()
        if newInstance and newInstance ~= lastInstanceId then
            lastInstanceId = newInstance
            teleportToInstance(newInstance)
        end

        task.wait(CHECK_INTERVAL)
    end
end

local function init()
    log("Initializing auto joiner...")
    repeat task.wait() until Players.LocalPlayer

    lastInstanceId = getLatestInstance()
    if lastInstanceId then
        log("Initial instance: " .. lastInstanceId)
    else
        log("Failed to fetch initial instance.")
    end

    task.spawn(mainLoop)
end

UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.End then
        stopScript = true
        log("Script manually terminated.")
    end
end)

init()
log("Auto joiner loaded. Press End to terminate.")
