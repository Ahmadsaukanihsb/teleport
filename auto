local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")

-- Config
local REDIS_API_URL = " https://38fa-36-76-129-51.ngrok-free.app/api"
local PLACE_ID = 126884695634066
local CHECK_INTERVAL = 15
local MAX_CHAT_PER_INSTANCE = 3
local TELEPORT_COOLDOWN = 30
local CHAT_MESSAGE = "Halo teman-teman!"

-- Penyimpanan lokal untuk tracking chat dan teleport cooldown
local instanceChatCounts = {}
local lastTeleportAttempt = 0

-- HTTP request helper
local function makeHttpRequest(method, endpoint, body)
    local requestFunc = http and http.request or http_request or request
    if not requestFunc then
        warn("HTTP function not available in executor")
        return nil
    end

    local url = REDIS_API_URL .. endpoint
    local headers = { ["Content-Type"] = "application/json" }
    local requestBody = body and HttpService:JSONEncode(body) or nil

    local success, response = pcall(function()
        return requestFunc({
            Url = url,
            Method = method,
            Headers = headers,
            Body = requestBody
        })
    end)

    return success and response or nil
end

-- Fungsi teleport dengan cooldown
local function safeTeleport(instanceId)
    if os.time() - lastTeleportAttempt < TELEPORT_COOLDOWN then
        print("‚è≥ Cooldown teleport, tunggu", TELEPORT_COOLDOWN - (os.time() - lastTeleportAttempt), "detik")
        return false
    end

    lastTeleportAttempt = os.time()
    pcall(function()
        TeleportService:TeleportToPlaceInstance(PLACE_ID, instanceId, Players.LocalPlayer)
    end)
    return true
end

-- Cek apakah ada userId lain di server yang sama dengan kita
local function isUserIdInSameInstance(userIds)
    local localUserId = Players.LocalPlayer.UserId
    for _, userId in ipairs(userIds) do
        if userId == localUserId then
            return true
        end
    end
    return false
end

-- Main loop
local function main()
    while task.wait(CHECK_INTERVAL) do
        local response = makeHttpRequest("GET", "/getInstanceId")
        if response and response.StatusCode == 200 then
            local success, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
            if success and data.instanceId then
                local instanceId = data.instanceId

                -- Init counter untuk instance baru
                if not instanceChatCounts[instanceId] then
                    instanceChatCounts[instanceId] = 0
                    print("üÜï Instance baru terdeteksi:", instanceId)
                end

                if instanceId == game.JobId then
                    print("‚úÖ Berada di instance", game.JobId, "| Chat terkirim:", instanceChatCounts[game.JobId] or 0, "/", MAX_CHAT_PER_INSTANCE)

                    if instanceChatCounts[game.JobId] >= MAX_CHAT_PER_INSTANCE then
                        print("üö´ Batas chat tercapai untuk instance ini")
                    else
                        -- Ambil userId lain yang ada di instance ini
                        local userIdResp = makeHttpRequest("GET", "/getUserIds?instanceId=" .. instanceId)
                        if userIdResp and userIdResp.StatusCode == 200 then
                            local successIds, dataIds = pcall(HttpService.JSONDecode, HttpService, userIdResp.Body)
                            if successIds and dataIds.userIds then
                                -- Kirim chat hanya jika userId kita ada di data userIds (berarti kita satu server)
                                if isUserIdInSameInstance(dataIds.userIds) then
                                    pcall(function()
                                        TextChatService.TextChannels.RBXGeneral:SendAsync(CHAT_MESSAGE)
                                        instanceChatCounts[game.JobId] = (instanceChatCounts[game.JobId] or 0) + 1
                                        print("üí¨ Mengirim chat (", instanceChatCounts[game.JobId], "/", MAX_CHAT_PER_INSTANCE, ")")
                                    end)
                                else
                                    print("‚ùå UserId lokal tidak ditemukan di server ini, skip chat")
                                end
                            else
                                warn("Gagal parsing userIds dari server")
                            end
                        else
                            warn("Gagal mendapatkan userIds dari server")
                        end
                    end
                else
                    print("üîÑ Instance berbeda, teleporting ke", instanceId)
                    -- Reset counter instance lama
                    if instanceChatCounts[game.JobId] then
                        instanceChatCounts[game.JobId] = nil
                    end

                    if safeTeleport(instanceId) then
                        task.wait(5)
                    end
                end
            else
                warn("Gagal parsing data instanceId:", response.Body)
            end
        else
            warn("Gagal mendapatkan instanceId dari server")
        end
    end
end

-- Jalankan script
local success, err = pcall(main)
if not success then
    warn("Script error:", err)
end
